"use client";

import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Calendar, CheckCircle, Clock, Syringe } from "lucide-react";
import { CreateVaccinationSchedule } from "./_components/create-vaccination-schedule";
import { VaccinationList } from "./_components/vaccination-list";
import { VaccinationDetail } from "./_components/vaccination-detail";
import { fetchData } from "@/lib/api/api";
import { toast } from "sonner";

export default function VaccinationManagementPage() {
  const [refreshKey, setRefreshKey] = useState(0);
  const [showCreateForm, setShowCreateForm] = useState(false);
  const [selectedScheduleId, setSelectedScheduleId] = useState<string | null>(
    null
  );
  const [schedules, setSchedules] = useState<any[]>([]);

  // Load schedules from localStorage on component mount
  useEffect(() => {
    const savedSchedules = localStorage.getItem("vaccination-schedules");
    if (savedSchedules) {
      try {
        setSchedules(JSON.parse(savedSchedules));
      } catch (error) {
        console.error("Error loading schedules from localStorage:", error);
      }
    }
  }, []);

  // Save schedules to localStorage whenever schedules change
  useEffect(() => {
    localStorage.setItem("vaccination-schedules", JSON.stringify(schedules));
  }, [schedules]);

  const handleCreateSchedule = () => {
    setShowCreateForm(true);
  };

  const handleCreateSuccess = () => {
    setShowCreateForm(false);
    setRefreshKey((prev) => prev + 1);
  };

  const handleCreateClose = () => {
    setShowCreateForm(false);
  };

  const handleDeleteSchedule = async (event: any) => {
    if (!window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° s·ª± ki·ªán ti√™m ch·ªßng n√†y?"))
      return;
    try {
      if (Array.isArray(event.vaccinations) && event.vaccinations.length > 0) {
        for (const v of event.vaccinations) {
          await fetchData(`/vaccination-schedules/${v._id}`, {
            method: "DELETE",
          });
        }
      } else {
        // fallback: xo√° theo event._id n·∫øu kh√¥ng c√≥ vaccinations
        await fetchData(`/vaccination-schedules/${event._id}`, {
          method: "DELETE",
        });
      }
      toast.success("ƒê√£ xo√° s·ª± ki·ªán ti√™m ch·ªßng th√†nh c√¥ng!");
      window.location.reload();
    } catch (error: any) {
      toast.error(error.message || "Xo√° s·ª± ki·ªán th·∫•t b·∫°i");
    }
  };

  return (
    <div className="container mx-auto p-6 space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold tracking-tight text-blue-800">
            Qu·∫£n l√Ω l·ªãch ti√™m ch·ªßng
          </h1>
          <p className="text-blue-600">
            T·∫°o v√† qu·∫£n l√Ω l·ªãch ti√™m ch·ªßng theo kh·ªëi l·ªõp v√† t·ª´ng h·ªçc sinh
          </p>
        </div>
        <Button
          onClick={handleCreateSchedule}
          className="bg-blue-600 hover:bg-blue-700"
        >
          <Syringe className="w-4 h-4 mr-2" />
          T·∫°o l·ªãch ti√™m ch·ªßng
        </Button>
      </div>

      {/* Tabs */}
      <Tabs defaultValue="my-schedules" className="w-full">
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger
            value="my-schedules"
            className="data-[state=active]:bg-blue-600 data-[state=active]:text-white"
          >
            L·ªãch ti√™m c·ªßa t√¥i
          </TabsTrigger>
          <TabsTrigger
            value="all-schedules"
            className="data-[state=active]:bg-blue-600 data-[state=active]:text-white"
          >
            T·∫•t c·∫£ l·ªãch ti√™m
          </TabsTrigger>
          <TabsTrigger
            value="workflow"
            className="data-[state=active]:bg-blue-600 data-[state=active]:text-white"
          >
            H∆∞·ªõng d·∫´n
          </TabsTrigger>
        </TabsList>

        <TabsContent value="my-schedules" className="space-y-4">
          {" "}
          <VaccinationList
            filter="my"
            refreshKey={refreshKey}
            onViewDetail={setSelectedScheduleId}
            onDelete={handleDeleteSchedule}
            schedules={schedules}
          />
        </TabsContent>

        <TabsContent value="all-schedules" className="space-y-4">
          {" "}
          <VaccinationList
            filter="all"
            refreshKey={refreshKey}
            onViewDetail={setSelectedScheduleId}
            onDelete={handleDeleteSchedule}
            schedules={schedules}
          />
        </TabsContent>

        <TabsContent value="workflow" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="text-xl font-bold text-blue-800">
                Lu·ªìng ch·ª©c nƒÉng ti√™m ch·ªßng
              </CardTitle>
              <p className="text-blue-600 text-sm">
                Quy tr√¨nh ho√†n ch·ªânh t·ª´ t·∫°o l·ªãch ƒë·∫øn tr·∫£ k·∫øt qu·∫£
              </p>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* B∆∞·ªõc 1 */}
              <div className="relative pl-8 pb-6 border-l-2 border-blue-200">
                <div className="absolute -left-3 top-0 w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center">
                  <span className="text-white text-xs font-bold">1</span>
                </div>
                <div className="space-y-2">
                  <h3 className="font-bold text-blue-800 text-lg">
                    B∆∞·ªõc 1: T·∫°o l·ªãch ti√™m
                  </h3>
                  <p className="text-gray-700 leading-relaxed">
                    Nh√¢n vi√™n y t·∫ø t·∫°o l·ªãch ti√™m ch·ªßng cho kh·ªëi l·ªõp ho·∫∑c t·ª´ng
                    h·ªçc sinh c·ª• th·ªÉ.
                  </p>
                  <div className="bg-blue-50 p-3 rounded-lg mt-2">
                    <p className="text-blue-800 text-sm font-medium">
                      üí° Thao t√°c: Ch·ªçn lo·∫°i vaccine, kh·ªëi l·ªõp, ng√†y ti√™m v√† ƒë·ªãa
                      ƒëi·ªÉm
                    </p>
                  </div>
                </div>
              </div>

              {/* B∆∞·ªõc 2 */}
              <div className="relative pl-8 pb-6 border-l-2 border-green-200">
                <div className="absolute -left-3 top-0 w-6 h-6 bg-green-600 rounded-full flex items-center justify-center">
                  <span className="text-white text-xs font-bold">2</span>
                </div>
                <div className="space-y-2">
                  <h3 className="font-bold text-green-800 text-lg">
                    B∆∞·ªõc 2: Th√¥ng b√°o ph·ª• huynh
                  </h3>
                  <p className="text-gray-700 leading-relaxed">
                    H·ªá th·ªëng t·ª± ƒë·ªông g·ª≠i th√¥ng b√°o ƒë·∫øn ph·ª• huynh qua
                    dashboard/events.
                  </p>
                  <div className="bg-green-50 p-3 rounded-lg mt-2">
                    <p className="text-green-800 text-sm font-medium">
                      üìß K√™nh th√¥ng b√°o: Dashboard, email, SMS (n·∫øu c√≥)
                    </p>
                  </div>
                </div>
              </div>

              {/* B∆∞·ªõc 3 */}
              <div className="relative pl-8 pb-6 border-l-2 border-yellow-200">
                <div className="absolute -left-3 top-0 w-6 h-6 bg-yellow-600 rounded-full flex items-center justify-center">
                  <span className="text-white text-xs font-bold">3</span>
                </div>
                <div className="space-y-2">
                  <h3 className="font-bold text-yellow-800 text-lg">
                    B∆∞·ªõc 3: Ph·ª• huynh ph·∫£n h·ªìi
                  </h3>
                  <p className="text-gray-700 leading-relaxed">
                    Ph·ª• huynh xem th√¥ng b√°o v·ªÅ ch∆∞∆°ng tr√¨nh ti√™m ch·ªßng v√† ch·ªçn
                    cho con em tham gia.
                  </p>
                  <div className="bg-yellow-50 p-3 rounded-lg mt-2">
                    <div className="flex justify-between items-center">
                      <p className="text-yellow-800 text-sm font-medium">
                        ‚úÖ ƒê·ªìng √Ω tham gia
                      </p>
                      <p className="text-yellow-800 text-sm font-medium">
                        ‚ùå T·ª´ ch·ªëi tham gia
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              {/* B∆∞·ªõc 4 */}
              <div className="relative pl-8 pb-6 border-l-2 border-purple-200">
                <div className="absolute -left-3 top-0 w-6 h-6 bg-purple-600 rounded-full flex items-center justify-center">
                  <span className="text-white text-xs font-bold">4</span>
                </div>
                <div className="space-y-2">
                  <h3 className="font-bold text-purple-800 text-lg">
                    B∆∞·ªõc 4: Th·ª±c hi·ªán ti√™m ch·ªßng
                  </h3>
                  <p className="text-gray-700 leading-relaxed">
                    Nh√¢n vi√™n y t·∫ø ti·∫øn h√†nh ti√™m ch·ªßng v√† c·∫≠p nh·∫≠t k·∫øt qu·∫£.
                  </p>
                  <div className="bg-purple-50 p-3 rounded-lg mt-2">
                    <p className="text-purple-800 text-sm font-medium">
                      üè• Ghi nh·∫≠n: Tr·∫°ng th√°i ti√™m, ph·∫£n ·ª©ng ph·ª•, ghi ch√∫ y t·∫ø
                    </p>
                  </div>
                </div>
              </div>

              {/* B∆∞·ªõc 5 */}
              <div className="relative pl-8">
                <div className="absolute -left-3 top-0 w-6 h-6 bg-indigo-600 rounded-full flex items-center justify-center">
                  <span className="text-white text-xs font-bold">5</span>
                </div>
                <div className="space-y-2">
                  <h3 className="font-bold text-indigo-800 text-lg">
                    B∆∞·ªõc 5: B√°o c√°o & Th·ªëng k√™
                  </h3>
                  <p className="text-gray-700 leading-relaxed">
                    T·∫°o b√°o c√°o t·ªïng h·ª£p k·∫øt qu·∫£ ti√™m ch·ªßng v√† th·ªëng k√™ hi·ªáu qu·∫£
                    ch∆∞∆°ng tr√¨nh.
                  </p>
                  <div className="bg-indigo-50 p-3 rounded-lg mt-2">
                    <p className="text-indigo-800 text-sm font-medium">
                      üìä Bao g·ªìm: Th·ªëng k√™ t·ª∑ l·ªá ti√™m, b√°o c√°o chi ti·∫øt, xu·∫•t d·ªØ
                      li·ªáu
                    </p>
                  </div>
                </div>
              </div>

              {/* L∆∞u √Ω quan tr·ªçng */}
              <div className="mt-8 p-4 bg-gradient-to-r from-red-50 to-orange-50 border-l-4 border-red-400 rounded-lg">
                <h4 className="font-bold text-red-800 mb-2">
                  ‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng
                </h4>
                <ul className="text-red-700 text-sm space-y-1">
                  <li>
                    ‚Ä¢ Ph·ª• huynh c·∫ßn ph·∫£n h·ªìi tr∆∞·ªõc th·ªùi h·∫°n ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·ªß
                    vaccine
                  </li>
                  <li>
                    ‚Ä¢ C·∫ßn ki·ªÉm tra t√¨nh tr·∫°ng s·ª©c kh·ªèe h·ªçc sinh tr∆∞·ªõc khi ti√™m
                  </li>
                  <li>‚Ä¢ Theo d√µi ph·∫£n ·ª©ng ph·ª• sau ti√™m trong 30 ph√∫t</li>
                  <li>‚Ä¢ C·∫≠p nh·∫≠t s·ªï ti√™m ch·ªßng v√† h·ªì s∆° y t·∫ø h·ªçc sinh</li>
                </ul>
              </div>

              {/* N√∫t h√†nh ƒë·ªông */}
              <div className="flex gap-4 pt-4">
                <Button className="bg-blue-600 hover:bg-blue-700 flex-1">
                  <Syringe className="w-4 h-4 mr-2" />
                  T·∫°o l·ªãch ti√™m m·ªõi
                </Button>
                <Button variant="outline" className="flex-1">
                  üìã Xem danh s√°ch ch·ªù ph·∫£n h·ªìi
                </Button>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      {/* Modal t·∫°o l·ªãch ti√™m */}
      {showCreateForm && (
        <CreateVaccinationSchedule
          onClose={handleCreateClose}
          onSuccess={handleCreateSuccess}
        />
      )}

      {/* Modal xem chi ti·∫øt */}
      {selectedScheduleId && (
        <VaccinationDetail
          scheduleId={selectedScheduleId}
          onClose={() => setSelectedScheduleId(null)}
        />
      )}
    </div>
  );
}
